local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = hehe, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })
 -- =======================================================================FPS=========================================================================================
 local function improveFPS()
    local decalsyeeted = true -- asdasd
    local game = game
    local workspace = game.Workspace
    local lighting = game.Lighting
    local terrain = workspace.Terrain
    local settings = settings
    
    -- Thiết lập thuộc tính ẩn
    sethiddenproperty(lighting, "Technology", 2)
    sethiddenproperty(terrain, "Decoration", false)
    
    -- Thiết lập thuộc tính địa hình
    terrain.WaterWaveSize = 0
    terrain.WaterWaveSpeed = 0
    terrain.WaterReflectance = 0
    terrain.WaterTransparency = 0
    
    -- Thiết lập thuộc tính ánh sáng
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    lighting.Brightness = 0
    
    -- Thiết lập chất lượng rendering
    settings().Rendering.QualityLevel = "Level01"
    
    -- Hàm xử lý phần tử
    local function processPart(v)
        if v:IsA("BasePart") then
            if not v:IsA("MeshPart") or (v:IsA("MeshPart") and decalsyeeted) then
                v.Material = Enum.Material.Plastic
                v.Reflectance = 0
            end
        elseif decalsyeeted then
            if v:IsA("Decal") or v:IsA("Texture") then
                v.Transparency = 1
            elseif v:IsA("MeshPart") then
                v.TextureID = 10385902758728957
            elseif v:IsA("SpecialMesh") then
                v.TextureId = 0
            elseif v:IsA("ShirtGraphic") then
                v.Graphic = 0
            elseif v:IsA("Shirt") or v:IsA("Pants") then
                v[v.ClassName.."Template"] = 0
            end
        end
        if v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        end
    end
    
    -- Tắt các hiệu ứng ánh sáng
    local function disableLightingEffects()
        for _, e in pairs(lighting:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end
    
    -- Xử lý các phần tử đã có trong workspace
    for _, v in pairs(workspace:GetDescendants()) do
        processPart(v)
    end
    
    -- Tắt các hiệu ứng ánh sáng
    disableLightingEffects()
    
    -- Kết nối sự kiện khi thêm phần tử mới vào workspace
    workspace.DescendantAdded:Connect(function(v)
        task.defer(processPart, v) -- Using task.defer to prevent errors without waiting
    end)
    
    -- Kết nối sự kiện khi thêm hiệu ứng ánh sáng mới
    lighting.ChildAdded:Connect(function(e)
        task.defer(function()
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end)
    end)
end
local function resetSettings()
    local lighting = game.Lighting
    local terrain = game.Workspace.Terrain

    -- Khôi phục thuộc tính ẩn
    sethiddenproperty(lighting, "Technology", 0) -- Giá trị mặc định
    sethiddenproperty(terrain, "Decoration", true) -- Giá trị mặc định

    -- Khôi phục thuộc tính địa hình
    terrain.WaterWaveSize = 1
    terrain.WaterWaveSpeed = 10
    terrain.WaterReflectance = 0.5
    terrain.WaterTransparency = 0.3

    -- Khôi phục thuộc tính ánh sáng
    lighting.GlobalShadows = true
    lighting.FogEnd = 100000
    lighting.Brightness = 2

    -- Khôi phục chất lượng rendering
    settings().Rendering.QualityLevel = "Automatic"

    -- Khôi phục hiệu ứng ánh sáng
    for _, e in pairs(lighting:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = true
        end
    end

    -- Khôi phục các phần tử đã có trong workspace
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Material = Enum.Material.SmoothPlastic -- hoặc giá trị mặc định khác
            v.Reflectance = 0.1 -- hoặc giá trị mặc định khác
        end
        if v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 0
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(1, 2) -- hoặc giá trị mặc định khác
        elseif v:IsA("Explosion") then
            v.BlastPressure = 500000
            v.BlastRadius = 10
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = true
        end
    end
end
-- =================================================================================================================================================================
local TeleportService = game:GetService("TeleportService")

local dungeonId = {
    --a world 1
    [2978696440] = 'Crabby Crusade (1-1)', 
    [4310476380] = 'Scarecrow Defense (1-2)', 
    [4310464656] = 'Dire Problem (1-3)',
    [4310478830] = 'Kingslayer (1-4)',
    [3383444582] = 'Gravetower Dungeon (1-5)',
    
    [3885726701] = 'Temple of Ruin (2-1)',
    [3994953548] = 'Mama Trauma (2-2)',
    [4050468028] = "Volcano's Shadow (2-3)",
    [3165900886] = 'Volcano Dungeon (2-4)',
    
    [4465988196] = 'Mountain Pass (3-1)',
    [4465989351] = 'Winter Cavern (3-2)',
    [4465989998] = 'Winter Dungeon (3-3)',

    [4646473427] = 'Scrap Canyon (4-1)',
    [4646475342] = 'Deserted Burrowmine (4-2)',
    [4646475570] = 'Pyramid Dungeon (4-3)',
    
    [6386112652] = 'Konoh Heartlands (5-1)',
    [6510862058] = 'Atlantic Atoll (6-1)',
    [6847034886] = 'Mezuvia Skylands (7-1)',
    [10795158121] = 'Gold Farming'
}

local towerId = {
    [5703353651] = 'Prison Tower',
    [6075085184] = 'Atlantis Tower',
    [7071564842] = 'Mezuvian Tower'
}

local lobbyId = {
    [2727067538] = 'Main menu',
    [4310463616] = 'World 1',
    [4310463940] = 'World 2',
    [4465987684] = 'World 3',
    [4646472003] = 'World 4',
    [5703355191] = 'World 5',
    [6075083204] = 'World 6',
    [6847035264] = 'World 7'
}

local function isGameLoaded()
    return game:IsLoaded()
end

local function teleportIfInSpecificLobby()
    if game.PlaceId == 2727067538 then
        warn("Teleporting from Main Menu to Hub 13")
        local placeId = 4310463616
        TeleportService:Teleport(placeId)
    elseif game.PlaceId == 4310463616 then
        warn("Teleporting from World 1 to Hub 34")
        local args = { [1] = 34 }

        local replicatedStorage = game:GetService("ReplicatedStorage")
        local teleportService = replicatedStorage:WaitForChild("Shared"):WaitForChild("Teleport")
        local startRaidEvent = teleportService:WaitForChild("StartRaid")

        if startRaidEvent then
            startRaidEvent:FireServer(unpack(args))
            print("StartRaid event fired.")
        else
            warn("StartRaid event not found!")
        end
    end
end

function lobbyCheck()
    for i, v in pairs(lobbyId) do
        if game.PlaceId == i then
            warn("Lobby:", v)
            return true
        end
    end
    return false
end

function dungeonCheck()
    for i, v in pairs(dungeonId) do
        if game.PlaceId == i then
            warn("Dungeon:", v)
            return true
        end
    end
    return false
end

function towerCheck()
    for i, v in pairs(towerId) do
        if game.PlaceId == i then
            warn("Tower:", v)
            return true
        end
    end
    return false
end

local function checkAndTeleport()
    warn('Checking')

    if isGameLoaded() then
        local inLobby = lobbyCheck()
        local inDungeon = dungeonCheck()
        local inTower = towerCheck()
        teleportIfInSpecificLobby()
    else
        game.Loaded:Wait()
        warn('Game Loaded')
        local inLobby = lobbyCheck()
        local inDungeon = dungeonCheck()
        local inTower = towerCheck()
        teleportIfInSpecificLobby()
    end
end

local checkAndTeleportCoroutine
local isChecking = false

local function startCheckingAndTeleporting()
    if not isChecking then
        isChecking = true
        checkAndTeleportCoroutine = coroutine.create(function()
            while isChecking do
                checkAndTeleport()
                wait(10)
            end
        end)
        coroutine.resume(checkAndTeleportCoroutine)
    end
end

local function stopCheckingAndTeleporting()
    if isChecking then
        isChecking = false
        if checkAndTeleportCoroutine then
            coroutine.close(checkAndTeleportCoroutine)
            checkAndTeleportCoroutine = nil
        end
    end
end
--=================================================================================================================================================================
 local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Section Example")
 local Toggle = Tab:CreateToggle({
    Name = "Toggle Example",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        if Value then
            improveFPS()
        else
            resetSettings()
        end
    end,
 })
 local Toggle = Tab:CreateToggle({
    Name = "Check and Teleport",
    CurrentValue = false,
    Flag = "ToggleCheckAndTeleport",
    Callback = function(Value)
        if Value then
            startCheckingAndTeleporting()
        else
            stopCheckingAndTeleporting()
        end
    end,
})
